openapi: 3.0.3
info:
  title: M295
  description: M295
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
paths:
  /team:
    get:
      tags:
        - team
      summary: Get all teams
      description: Get all teams
      operationId: getTeams
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
        '400':
          description: Invalid Request supplied
        '404':
          description: Teams not found
        '405':
          description: Validation exception
        '500':
          description: Critical error
    post:
      tags:
        - team
      summary: Create a team
      description: Create a team
      operationId: createTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          description: Invalid Request supplied
        '500':
          description: Critical error

  /team/{teamId}:
    get:
      tags:
        - team
      summary: Get one team
      description: Get one team
      operationId: getTeam
      parameters:
        - name: teamId
          in: path
          description: teamId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          description: Invalid Request supplied
        '500':
          description: Critical error
    put:
      tags:
          - team
      summary: Update a team
      description: Update a team
      operationId: updateTeam
      parameters:
          - name: teamId
            in: path
            description: teamId
            required: true
            schema:
              type: integer
              format: int32
      requestBody:
          content:
              application/json:
                  schema:
                      $ref: '#/components/schemas/Team'
      responses:
          '200':
              description: Successful operation
              content:
                application/json:
                    schema:
                      $ref: '#/components/schemas/Team'
          '400':
              description: Invalid Request supplied
          '500':
              description: Critical error
    delete:
        tags:
            - team
        summary: Delete a team
        description: Delete a team
        operationId: deleteTeam
        parameters:
            - name: teamId
              in: path
              description: teamId
              required: true
              schema:
                type: integer
                format: int32
        responses:
            '200':
                description: Successful operation
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Team'
            '400':
                description: Invalid Request supplied
            '500':
                description: Critical error

  /teamMember:
    get:
      tags:
        - teamMember
      summary: Get all teamMembers
      description: Get all teamMembers
      operationId: getTeamMembers
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMember'
        '400':
          description: Invalid Request supplied
        '404':
          description: TeamMembers not found
        '405':
          description: Validation exception
        '500':
          description: Critical error
    post:
        tags:
            - teamMember
        summary: Create a teamMember
        description: Create a teamMember
        operationId: createTeamMember
        requestBody:
            content:
              application/json:
                  schema:
                      $ref: '#/components/schemas/TeamMember'
        responses:
            '200':
              description: Successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/TeamMember'
            '400':
              description: Invalid Request supplied
            '500':
              description: Critical error
  /teamMember/{memberId}:
    get:
      tags:
        - teamMember
      summary: Get one teamMember
      description: Get one teamMember
      operationId: getTeamMember
      parameters:
        - name: memberId
          in: path
          description: memberId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMember'
        '400':
          description: Invalid Request supplied
        '500':
          description: Critical error

    put:
        tags:
            - teamMember
        summary: Update a teamMember
        description: Update a teamMember
        operationId: updateTeamMember
        parameters:
            - name: memberId
              in: path
              description: memberId
              required: true
              schema:
                type: integer
                format: int32
        requestBody:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/TeamMember'
        responses:
            '200':
                description: Successful operation
                content:
                  application/json:
                      schema:
                        $ref: '#/components/schemas/TeamMember'
            '400':
                description: Invalid Request supplied
            '500':
                description: Critical error
    delete:
        tags:
            - teamMember
        summary: Delete a teamMember
        description: Delete a teamMember
        operationId: deleteTeamMember
        parameters:
            - name: memberId
              in: path
              description: memberId
              required: true
              schema:
                type: integer
                format: int32
        responses:
            '200':
                description: Successful operation
                content:
                  application/json:
                      schema:
                        $ref: '#/components/schemas/TeamMember'
            '400':
                description: Invalid Request supplied
            '500':
                description: Critical error

  /software:
    get:
      tags:
        - software
      summary: Get all software
      description: Get all software
      operationId: getSoftwares
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Software'
        '400':
          description: Invalid Request supplied
        '404':
          description: Software not found
        '405':
          description: Validation exception
        '500':
          description: Critical error
    post:
        tags:
            - software
        summary: Create a software
        description: Create a software
        operationId: createSoftware
        requestBody:
            content:
              application/json:
                  schema:
                      $ref: '#/components/schemas/Software'
        responses:
            '200':
              description: Successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Software'
            '400':
              description: Invalid Request supplied
            '500':
              description: Critical error


  /software/{softwareId}:
    get:
      tags:
        - software
      summary: Get one software
      description: Get one software
      operationId: getSoftware
      parameters:
        - name: softwareId
          in: path
          description: softwareId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software'
        '400':
          description: Invalid Request supplied
        '500':
          description: Critical error
    put:
        tags:
            - software
        summary: Update a software
        description: Update a software
        operationId: updateSoftware
        parameters:
            - name: softwareId
              in: path
              description: softwareId
              required: true
              schema:
                type: string
        requestBody:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Software'
        responses:
            '200':
                description: Successful operation
                content:
                    application/json:
                        schema:
                          $ref: '#/components/schemas/Software'
            '400':
                description: Invalid Request supplied
            '500':
                description: Critical error
    delete:
        tags:
            - software
        summary: Delete a software
        description: Delete a software
        operationId: deleteSoftware
        parameters:
            - name: softwareId
              in: path
              description: softwareId
              required: true
              schema:
                type: string
        responses:
            '200':
                description: Successful operation
                content:
                    application/json:
                        schema:
                          $ref: '#/components/schemas/Software'
            '400':
                description: Invalid Request supplied
            '500':
                description: Critical error
  /project:
    get:
      tags:
        - project
      summary: Get all projects
      description: Get all projects
      operationId: getProjects
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '400':
          description: Invalid Request supplied
        '404':
          description: Project not found
        '405':
          description: Validation exception
        '500':
          description: Critical error
    post:
        tags:
            - project
        summary: Create a project
        description: Create a project
        operationId: createProject
        requestBody:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Project'
        responses:
            '200':
                description: Successful operation
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Project'
            '400':
                description: Invalid Request supplied
            '500':
                description: Critical error
  /project/{projectId}:
    get:
      tags:
        - project
      summary: Get one project
      description: Get one project
      operationId: getProject
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid Request supplied
        '500':
          description: Critical error
    put:
        tags:
            - project
        summary: Update a project
        description: Update a project
        operationId: updateProject
        parameters:
            - name: projectId
              in: path
              description: projectId
              required: true
              schema:
                type: integer
                format: int32
        requestBody:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Project'
        responses:
            '200':
                description: Successful operation
                content:
                    application/json:
                        schema:
                          $ref: '#/components/schemas/Project'
            '400':
                description: Invalid Request supplied
            '500':
                description: Critical error
    delete:
        tags:
            - project
        summary: Delete a project
        description: Delete a project
        operationId: deleteProject
        parameters:
            - name: projectId
              in: path
              description: projectId
              required: true
              schema:
                type: integer
                format: int32
        responses:
            '200':
                description: Successful operation
                content:
                    application/json:
                        schema:
                          $ref: '#/components/schemas/Project'
            '400':
                description: Invalid Request supplied
            '500':
                description: Critical error
components:
  schemas:
    TeamMember:
      type: object
      properties:
        memberId:
          type: integer
          format: int32
          example: 10
        name:
          type: string
          example: Smith
        firstname:
          type: string
          example: John
        joinDate:
          type: string
          format: date-time
        team:
          $ref: '#/components/schemas/Team'
    Team:
      type: object
      properties:
        teamId:
          type: integer
          format: int32
          example: 10
        budget:
          type: number
          format: double
          example: 96.00
        teamName:
          type: string
          example: Team 1
        teamMembers:
          type: array
          items:
            $ref: '#/components/schemas/TeamMember'

    Software:
      type: object
      properties:
        softwareId:
          type: string
          example: AOP
        softwareName:
          type: string
          example: Application One Project
        softwareVersion:
          type: string
          example: 1.0.0
        team:
          $ref: '#/components/schemas/Team'
        project:
          $ref: '#/components/schemas/Project'
        status:
          type: string
          description: Order Status
          example: approved
          enum:
            - deployed
            - testing
            - development
            - planning
    Project:
      type: object
      properties:
        projectId:
          type: integer
          format: int32
          example: 10
        projectName:
            type: string
            example: Project 1
